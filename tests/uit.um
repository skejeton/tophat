import (
	"anim.um"
	"audio.um"
	"csv.um"
	"ent.um"
	"font.um"
	"image.um"
	"input.um"
	"lerp.um"
	"light.um"
	"misc.um"
	"particles.um"
	"canvas.um"
	"ray.um"
	"rect.um"
	"th.um"
	"tilemap.um"
	"window.um"
	"ui.um"
	"ui/grid.um"
	"ui/label.um"
	"ui/imagebox.um"

	"std.um"
	"map.um"
)

fn main() { 
	cam := rect.mk(0, 0, 250, 250)
	window.setup("test game", 100, 100)

	theme := ui.Theme{
		fg: th.blue,
		bg: th.red,
		borderColor: th.blue,
		borderSize: 3}

	l := label.mk(ui.PixelFont{}, "Hello world", theme, 2)
	l.get().grid(0, 0).span(3, 1)
	l.g.ctx = &l
	l.g.onEvent = fn(eventType: th.uu, ctx: interface{}) {
		l := ^label.Label(ctx)
		if eventType == ui.eventPress {
			l.g.theme.bg = th.cyan
		} else if eventType == ui.eventRelease {
			l.g.theme.bg = th.red
		}
	}
	l.center = true

	iBox := imagebox.mk(image.load("etc/test.png"))
	iBox.get().grid(2, 1).span(1, 1)
	iBox.g.onEvent = fn(eventType: th.uu, ctx: interface{}) { }
	iBox.image.crop(th.Vf2{0.5, 1.0/12}, th.Vf2{1, 1})
	iBox.image.flipv(true)

	cf := font.mkCached(font.load("examples/space-shooter/gfx/marediv-regular.ttf"), 100)
	cf.preCacheStr("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,. ")

	rl := label.mk(&cf, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur facilisis est sed lectus ultrices, nec pellentesque ipsum lacinia. Donec sodales.", theme, 4)
	rl.get().grid(0, 1).span(2, 2)
	rl.center = true
	rl.wrapping = true
	
	g := grid.mk(3, 3)
	g.g.r.w = cam.w
	g.g.r.h = cam.h
	g.elements = []ui.Element{&l, &iBox, &rl}
	g.border = 10	

	for window.cycle(cam) {
		canvas.drawRect(th.white, cam)

		if th.delta == 0 {
			th.delta = 16
		}
		canvas.drawText(repr(1000/th.delta), th.Vf2{0, 0}, th.black, 1)

		g.handle()
		g.draw()
	}
}

fn windowdestroy() {
	printf("destroying window\n")
}
